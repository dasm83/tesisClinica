package com.tesis.clinicapp.model;
// Generated 10-05-2016 09:37:42 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Expediente generated by hbm2java
 */
@Entity
@Table(name = "expediente", schema = "clinica")
public class Expediente implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 163544963349177235L;
	private int idExpediente;
	private PacienteDatos pacienteDatos;
	private Date fecha;
	private Set<Examen> examens = new HashSet<Examen>(0);
	private Set<Contacto> contactos = new HashSet<Contacto>(0);
	private Set<CitaMedica> citaMedicas = new HashSet<CitaMedica>(0);

	public Expediente() {
	}

	public Expediente(int idExpediente, PacienteDatos pacienteDatos, Date fecha) {
		this.idExpediente = idExpediente;
		this.pacienteDatos = pacienteDatos;
		this.fecha = fecha;
	}

	public Expediente(int idExpediente, PacienteDatos pacienteDatos, Date fecha, Set<Examen> examens,
			Set<Contacto> contactos, Set<CitaMedica> citaMedicas) {
		this.idExpediente = idExpediente;
		this.pacienteDatos = pacienteDatos;
		this.fecha = fecha;
		this.examens = examens;
		this.contactos = contactos;
		this.citaMedicas = citaMedicas;
	}

	@Id

	@Column(name = "id_expediente", unique = true, nullable = false)
	public int getIdExpediente() {
		return this.idExpediente;
	}

	public void setIdExpediente(int idExpediente) {
		this.idExpediente = idExpediente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_paciente_datos", nullable = false)
	public PacienteDatos getPacienteDatos() {
		return this.pacienteDatos;
	}

	public void setPacienteDatos(PacienteDatos pacienteDatos) {
		this.pacienteDatos = pacienteDatos;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha", nullable = false, length = 13)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		this.fecha = fecha;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "expediente")
	public Set<Examen> getExamens() {
		return this.examens;
	}

	public void setExamens(Set<Examen> examens) {
		this.examens = examens;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "expediente")
	public Set<Contacto> getContactos() {
		return this.contactos;
	}

	public void setContactos(Set<Contacto> contactos) {
		this.contactos = contactos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "expediente")
	public Set<CitaMedica> getCitaMedicas() {
		return this.citaMedicas;
	}

	public void setCitaMedicas(Set<CitaMedica> citaMedicas) {
		this.citaMedicas = citaMedicas;
	}

}
